// <auto-generated />
using System;
using Engine_Graph_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Engine_Graph_App.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20231012151315_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Engine_Graph_App.Models.Cylinder", b =>
                {
                    b.Property<int>("CylinderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EngineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CylinderId");

                    b.HasIndex("EngineId");

                    b.ToTable("Cylinders");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Engine", b =>
                {
                    b.Property<int>("EngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ShipId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EngineId");

                    b.HasIndex("ShipId");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CylinderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Pow")
                        .HasColumnType("REAL");

                    b.Property<double>("Pscv")
                        .HasColumnType("REAL");

                    b.Property<double>("TDC")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CylinderId");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Cylinder", b =>
                {
                    b.HasOne("Engine_Graph_App.Models.Engine", "Engine")
                        .WithMany("Cylinders")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Engine", b =>
                {
                    b.HasOne("Engine_Graph_App.Models.Ship", "Ship")
                        .WithMany("Engines")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Measurement", b =>
                {
                    b.HasOne("Engine_Graph_App.Models.Cylinder", "Cylinder")
                        .WithMany("Measurements")
                        .HasForeignKey("CylinderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cylinder");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Cylinder", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Engine", b =>
                {
                    b.Navigation("Cylinders");
                });

            modelBuilder.Entity("Engine_Graph_App.Models.Ship", b =>
                {
                    b.Navigation("Engines");
                });
#pragma warning restore 612, 618
        }
    }
}
